#include <Time.h>
#include <TimeLib.h>
#include <Wire.h>
#include <DS1307RTC.h>
#include <SoftwareSerial.h>

SoftwareSerial S(2,3);//2:RX' and 3:TX'
int latchPin = 8;//pin 12 on the 595
int dataPin=11;//pin 14 on the 595
int clockPin = 12;//pin 11 on the 595
int format =4 ;
int shift =255;
int units, tens, hundreds, thousands,secunits,sectens;
int Hr, Min,temp ,sec;
tmElements_t tm,tm1;

void setup () 
{
pinMode(latchPin, OUTPUT );
pinMode(dataPin, OUTPUT );
pinMode(clockPin, OUTPUT );
pinMode(format, INPUT );
pinMode(2,INPUT);
pinMode(3,OUTPUT);
Serial.begin(9600);
S.begin(9600);
while (!Serial);//wait for serial
delay(200);
Serial.println("DS1307RTC Read Test");
Serial.println("------");
}

void loop()
{
if (RTC.read(tm)) {
Serial.print("Ok, Time= ");
print2digits(tm.Hour);
Serial.write(':');
print2digits(tm.Minute);
Serial.write(':');
print2digits(tm.Second);
Serial.println();
}
else 
{
if(RTC.chipPresent()) {
Serial.println("The DS1307 is stopped. Please run the SetTime");
Serial.println("example to initialize the time and begin running.");
Serial.println();
} else {
Serial.println("DS1307 read error! Please check the circuitry.");
Serial.println();
}
delay(90);
}
if((tm.Hour==5)&&(tm.Minute==36))
{
    setrtc();
  }
Hr= tm.Hour;
temp =Hr;
Min =tm.Minute;
sec =tm.Second;
if(digitalRead(format) == LOW ) {
if (Hr < 10)
{
hundreds =Hr;
thousands= Hr/10;
}
else if (Hr > 10 && Hr < 24 )
{
hundreds= Hr%10;
thousands= Hr/10;
}
if(Min<=9)
{
units= Min;
tens= Min/10;
}
else if (Min > 9 && Min <=60)
{
units= Min%10 ;
tens= Min/10;
}
if (sec <= 9 )
secunits =sec;
else if (sec > 9 && sec <=60)
secunits =sec%10;


switch (secunits)
{
case 0:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift ^ (B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift ^ (B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift ^ (B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin,LOW );
shiftOut(dataPin,clockPin, LSBFIRST,shift^ (B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
 case 6:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^ (B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift ^ (B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin,HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
}
delay(1);
switch (units)
{
case 0:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000));
shiftOut(dataPin, clockPin, LSBFIRST , 3);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift ^ (B00010000));
shiftOut(dataPin, clockPin, LSBFIRST , shift-96 );
digitalWrite(latchPin,HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000));
shiftOut(dataPin, clockPin, LSBFIRST , 37);
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
shiftOut(dataPin, clockPin, LSBFIRST , 13);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift ^ (B00010000) );
shiftOut(dataPin, clockPin, LSBFIRST , 153);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
shiftOut(dataPin, clockPin, LSBFIRST , 73);
digitalWrite(latchPin, HIGH);
break;
case 6 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
shiftOut(dataPin, clockPin, LSBFIRST , 65);
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000));
shiftOut(dataPin, clockPin, LSBFIRST , 31 );
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
shiftOut(dataPin, clockPin, LSBFIRST , 1 );
digitalWrite(latchPin, HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
shiftOut(dataPin, clockPin, LSBFIRST,9 );
digitalWrite(latchPin,HIGH);
break;
}
delay(1);

switch(tens)
{
case 0:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 3);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000));
shiftOut(dataPin, clockPin, LSBFIRST , shift-96 );
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 37);
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 13);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 153);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 73);
digitalWrite(latchPin, HIGH);
break;
}
delay(1);

switch(hundreds)
{
case 0:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 3);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift -96 );
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , 37);
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , 13);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin,clockPin,LSBFIRST , 153);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 73);
digitalWrite(latchPin, HIGH);
break;
case 6 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 65);
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 31 );
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 1 );
digitalWrite(latchPin, HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , 9 );
digitalWrite(latchPin, HIGH);
break;
}
delay(1);



switch(thousands)
{
case 0:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift>>1 );
shiftOut(dataPin, clockPin, LSBFIRST , 3);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , shift -96 );
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 37);
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST ,shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 13);
digitalWrite(latchPin, HIGH);
break;
case 4:
digitalWrite(latchPin,LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift>>1 );
shiftOut(dataPin, clockPin, LSBFIRST , 153);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >>1 );
shiftOut(dataPin, clockPin, LSBFIRST , 73);
digitalWrite(latchPin, HIGH);
break;
case 6 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift>> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 65);
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 31 );
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 1 );
digitalWrite(latchPin, HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 9 );
digitalWrite(latchPin, HIGH);
break;
}
delay(1);
}
else {
if(Hr==0)
 Hr = 12;
if (Hr < 10)
{
hundreds =Hr;
thousands =Hr/10;
}
else if (Hr >= 10&& Hr < 13)
{
hundreds= Hr%10;
thousands= Hr/10;
}
else if (Hr >= 13&& Hr < 24 )
{
Hr= (Hr-12);
if (Hr < 10) {
hundreds= Hr;
thousands= Hr/10;
}
else{
hundreds= Hr%10;
thousands= Hr/10;
}
}
if (Min <= 9 )
{
units=Min;
tens =Min/10;
}
else if (Min > 9 && Min <= 60)
{
units = Min % 10 ;
tens= Min/10;
}
if (sec <= 9 )
secunits= sec;
else if (sec > 9 && sec <= 60)
secunits =sec % 10;
switch (secunits)
{
case 0:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
case 6 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-1 );
digitalWrite(latchPin, HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift);
digitalWrite(latchPin, HIGH);
break;
}
delay(1);

switch (units)
{
case 0:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , 3);
else
shiftOut(dataPin, clockPin, LSBFIRST , 2);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000));
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , shift -96 );
else
shiftOut(dataPin, clockPin, LSBFIRST , shift -97);
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
if(temp <12)
shiftOut(dataPin, clockPin, LSBFIRST , 37);
else
shiftOut(dataPin, clockPin, LSBFIRST , 36 );
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , 13);
else
shiftOut(dataPin, clockPin, LSBFIRST , 12);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , 153);
else
shiftOut(dataPin, clockPin, LSBFIRST , 152);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
if(temp <12)
shiftOut(dataPin, clockPin, LSBFIRST , 73);
else
shiftOut(dataPin, clockPin, LSBFIRST , 72);
digitalWrite(latchPin, HIGH);
break;
case 6 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , 65);
else
shiftOut(dataPin, clockPin, LSBFIRST , 64 );
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000) );
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , 31 );
else
shiftOut(dataPin, clockPin, LSBFIRST , 30);
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000));
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , 1 );
else
shiftOut(dataPin, clockPin, LSBFIRST , 0);
digitalWrite(latchPin, HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00010000));
if(temp < 12)
shiftOut(dataPin, clockPin, LSBFIRST , 9 );
else
shiftOut(dataPin, clockPin, LSBFIRST , 8);
digitalWrite(latchPin, HIGH);
break;
}
delay(1);

switch (tens)
{
case 0 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 3);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift-96 );
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 37);
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 13);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 153);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B00100000) );
shiftOut(dataPin, clockPin, LSBFIRST , 73);
digitalWrite(latchPin, HIGH);
break;
}
delay(1);

switch (hundreds)
{
case 0:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 3);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , shift -96 );
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 37);
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , 13);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , 153);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 73);
digitalWrite(latchPin, HIGH);
break;
case 6 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 65);
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 31 );
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000) );
shiftOut(dataPin, clockPin, LSBFIRST , 1 );
digitalWrite(latchPin, HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift^(B01000000));
shiftOut(dataPin, clockPin, LSBFIRST , 9 );
digitalWrite(latchPin, HIGH);
break;
}
delay(1);

switch (thousands)
{
case 0:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift>> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 3);
digitalWrite(latchPin, HIGH);
break;
case 1 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , shift -96 );
digitalWrite(latchPin, HIGH);
break;
case 2:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift>> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 37);
digitalWrite(latchPin, HIGH);
break;
case 3:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 13);
digitalWrite(latchPin, HIGH);
break;
case 4 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 153);
digitalWrite(latchPin, HIGH);
break;
case 5:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 73);
digitalWrite(latchPin, HIGH);
break;
case 6 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 65);
digitalWrite(latchPin, HIGH);
break;
case 7:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 31 );
digitalWrite(latchPin, HIGH);
break;
case 8:
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 1 );
digitalWrite(latchPin, HIGH);
break;
case 9 :
digitalWrite(latchPin, LOW );
shiftOut(dataPin, clockPin, LSBFIRST , shift >> 1 );
shiftOut(dataPin, clockPin, LSBFIRST , 9 );
digitalWrite(latchPin, HIGH);
break;
}
delay(1);
 }
}

void  print2digits(int number) 
{
if(number>=0 && number <10) 
 {
    Serial.write('0');
 }
Serial.print(number);
}

void setrtc()
{
    String f;
    f = S.readString();
    Serial.println(f);
    String y = f.substring(0,4);
    Serial.println(y);
    String u = f.substring(5,7);
    Serial.println(u);
    String v = f.substring(8,10);
    Serial.println(v);
    String w = f.substring(11,13);
    Serial.println(w);
    String x = f.substring(14,16);
    Serial.println(x);
    String z = f.substring(17,19);
    Serial.println(z);
    tm1.Hour = w.toInt();
    tm1.Minute = x.toInt();
    tm1.Second = z.toInt();
    tm1.Day = v.toInt();
    tm1.Month = u.toInt();
    tm1.Year = y.toInt()-1970;
    RTC.write(tm1);
}